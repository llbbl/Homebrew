t <- c(1,2,3,4)
t
t[1]
t[3]
t
t
x <- c(9,8,7,6)
x + t
source('C:/Development/Homebrew/rscript/sample.R')
t
weight <- c(1, 2, 3)
weight <- c(1, 2, 3)
height <- c(3, 4, 5)
source('C:/Development/Homebrew/rscript/first_training_file.R', echo=TRUE)
source('C:/Development/Homebrew/rscript/first_training_file.R', echo=TRUE)
source('C:/Development/Homebrew/rscript/first_training_file.R')
source('C:/Development/Homebrew/rscript/first_training_file.R')
source('C:/Development/Homebrew/rscript/first_training_file.R')
?c()
constant <- 703
bmi <- (weight/(height^2)) * constant
BMI
bmi
constant <- 703
bmi <- (weight/(height^2)) * constant
bmi
weight = c(1, 2,3,4);
height = c(1, 2,3,4);
constant <- 703
bmi <- (weight/(height^2)) * constant
bmi
source('C:/Development/Homebrew/rscript/first_training_file.R')
source('C:/Development/Homebrew/rscript/first_training_file.R')
gender = c("male", "female")
gender
class(gender)
class(weight)
logical <- gender == "male"
logical
gender[logical]
plot(height, weight)
source('C:/Development/Homebrew/rscript/first_training_file.R')
source('C:/Development/Homebrew/rscript/first_training_file.R')
source('~/.active-rstudio-document')
x1 / 12
x1 + x2
gender <- c("male", "female", "male", "male","male", "female", "male", "male")
logical <- gender == "female"
logical
gender[logical]
weight = c(1, 2,3,4,1, 2,3,4);
height = c(1, 2,3,4,1, 2,3,4);
gender[logical]
gender[logical]
height[logical]
is.vector(gender)
height[1:4]
height[1:3]
y <- matrix(1:20, nrow=5, ncol=4);
y
y[1,3]
cells <- c(1, 26, 24, 68);
rnames <- c("R1", "R2");
cnames <- c("C1", "C2")
matrix(cells, nrow=length(rnames), ncol=length(cnames), byrow=TRUE,dimnames=list(rnames, cnames))
mat <- matrix(cells, nrow=length(rnames), ncol=length(cnames), byrow=TRUE,dimnames=list(rnames, cnames))
patientId <- c(1, 2, 3, 4)
age <- c(25, 34, 28,m 52)
age <- c(25, 34, 28,52)
diabetes <- c("Type1", "Type2", "Type1", "Type2")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- dat
patientdata <- data.frame(patientID, age, diabetes, status)
patientdata <- data.frame(patientId, age, diabetes, status)
patientdata
install.packages("formatR")
tidy.source()
library(formatR)
tidy.source()
patientdata[1]
patientdata[1,]
patientdata[,4]
patientdata[c(1,4), 2]
patientdata[, 1]
patientdata[1, ]
patientdata[c(1,4), 2]
tidy.source()
tidy.source()
y <- matrix(1:20, nrow=5, ncol=4);
library(gWidgetsRGtk2)
install.packages("gWidgetsRGtk2")
library(gWidgetsRGtk2)
tidy.gui();
tidy.gui();
tidy.source()
tidy.source()
id = c(5,6,7,8)
id = c(5,6,7,8, 9)
age = c(23,32, 41, 52, 43)
eye = c("brown", "blue", "brown", "hazel", "green")
hair = c("brown", "blue", "brown", "hazel", "green")
demo = data.entry(id, age, eye, hair);
demo
age = c(23,32, 41, 52, 43)
eye = c("brown", "blue", "brown", "hazel", "green")
hair = c("brown", "blue", "brown", "hazel", "green")
demo = data.entry(id, age, eye, hair);
demo <- data.entry(id, age, eye, hair);
id <- c(5,6,7,8, 9)
age <- c(23,32, 41, 52, 43)
eye <- c("brown", "blue", "brown", "hazel", "green")
hair <- c("brown", "blue", "brown", "hazel", "green")
demo <- data.entry(id, age, eye, hair);
demo
(id, age, eye, hair);
demo <- data.frame(id, age, eye, hair);
demo
mean(demo$age)
tidy.gui()
tidy.gui();
gender <- c("male", "female", "male", "male", "male", "female",
"male", "male")
demo = data.frame(id, age, eye, hair)
mean(demo$age)
tidy.gui();
tidy.source("C:\Development\Homebrew\rscript\intro_exercise.R");
tidy.source("C:\\Development\Homebrew\rscript\intro_exercise.R");
tidy.source("C:\\Development\\Homebrew\\rscript\\intro_exercise.R");
tidy.source("C:\\Development\\Homebrew\\rscript\\intro_exercise.R");
tidy.source("C:\\Development\\Homebrew\\rscript\\intro_exercise.R");
tidy.source();
f = 'C:\\Development\\Homebrew\\rscript\\intro_exercise.R';
tidy.source(f, file=f);
tidy.source(f, file = f)
f = "C:\\Development\\Homebrew\\rscript\\intro_exercise.R"
tidy.source(f, file = f)
patientdata
str(patientdata)
summary(patientdata)
mylist <- list(title=g, age=h, j, k)
g <- "My First List"
h <- c(25, 26, 18, 39);
j <- matrix(1:10, nrows=5);
k <- c("one", "two", "three");
mylist <- list(title=g, age=h, j, k)
j <- matrix(1:10, nrows=5);
j <- matrix(1:10, nrow=5);
k <- c("one", "two", "three");
mylist <- list(title=g, age=h, j, k)
mylist
mylist[1]
mylist[4]
mylist[[1]]
mylist[[3]]
data(mtcars)
sr(mtcars)
str(mtcars)
names(mtcars)
class(mtcars)
class(mtcars$hp)
is.vector(mtcars$hp)
rowname(mtcars)
rownames(mtcars)
mtcars
mtcars$id <- rownames(mtcars)
names(mtcars)
mtcars
with(mtcars, mean(hp)
with(mtcars, mean(hp))
with(mtcars, mean(hp))
with(mtcars, mean(hp)
)
levels(mtcars)
names(mtcars)
levels(mtcars $am)
levels(mtcars$am)
unique(mtcars$am)
levels(factor(mtcars$am))
head(mtcars$am)
factor(mtcars$am, levels=c(1))
factor(mtcars$am, levels=c(1="Yes"))
factor(mtcars$am, levels=c("Yes"))
data(iris
data(iris)
data(iris)
iris
names(iris)
lenght(iris)
length(iris)
rownames(iris)
length(rownames(iris))
iris[c(25, 26)]
head(iris)
iris[rownames(iris) == "25"]
class(rownames(iris))
str(iris)
iris[25, 26]
iris[25]
iris[25,]
iris[c(25,),c(26,)]
iris[c(25,26),]
iris[c(25,26,10, 30),]
iris[c(25,26,10, 30),]$Species
s <- iris[c(25,26,10, 30)
s <- iris[c(25,26,10, 30)]
s <- iris[c(25,26,10, 30)]
s <- iris[c(25,26,10, 30),]
s
data.frame(s$Species, s$Sepal.Width)
s
n <- data.frame(s$Species, s$Sepal.Width)
n
factor(mtcars$am, c(0, 1), c("No", "Yes"))
)
install.packages(car)
install.packages("car")
mtcars$id
mtcars$id <- factor(mtcars$id)
mtcars$id
mtcars$hp
cut(mtcars$hp, breaks=c(110, 175), include.lowest=TRUE)
save.image("~/sample.RData")
head(mtcars)
mtcars$vs[mtcars$vs==0] <- NA
head(mtcars)
mtcars$cyl[mtcars$cyl==6 & mtcars$cyl==8]
mtcars$cyl[mtcars$cyl>4 & mtcars$cyl<8]
mtcars[mtcars$cyl>4 & mtcars$cyl<8]
mtcars$cyl[mtcars$cyl> 4 & mtcars$cyl<8]
mtcars$cyl[mtcars$cyl> 4 & mtcars$cyl < 8]
within(mtcars,
{
numCyl <- NA,
numCyl[cyl == 4] <- "4 banger"
})
library(car)
f = "C:\\Development\\Homebrew\\rscript\\intro_exercise.R"
tidy.source(f, file = f)
library(formatR)
f = "C:\\Development\\Homebrew\\rscript\\intro_exercise.R"
tidy.source(f, file = f)
x <- rep(1:3, 3)
x
col <- c(1,2)
recode(x, "col='A'; else='B'")
recode(x, "col='A'; else='B'")
x <- rep(1:3, 3)
x
col <- c(1,2)
recode(x, "col='A'; else='B'")
recode(x, "c(1,2)='A'; else='B'")
names(mtcars)
nm <- names(mtcars)
nm
library(reshape)
install.package('reshape')
install.packages('reshape')
library(reshape)
names(mtcars)
new_mtcars <- rename(mtrcars, c(wt="weight", cyl="cylinders"))
new_mtcars <- rename(mtcars, c(wt="weight", cyl="cylinders"))
new_mtcars
head(new_mtcars)
new
new_mtcars
is.na(new_mtcars[c("vs")])
na.omit(new_mtcars)
dates <- as.Date(c("2012-12-01", "2012-01-12"))
dates
new_mtcars$dates <- NA
new_mtcars
dates <- as.Date(c("12/01/2012", "01/12/2012"), format="%m/%d/%Y")
dates
format(dates, "%B, %d %Y")
install.packages('lubridate')
library(lubridate)
lubridate::stamp
reshape::stamp
arrange(new_mtcars, weight, desc(hp))
library(plyr)
arrange(new_mtcars, weight, desc(hp))
which(mtcars$weight > 1.5 & mtcars$weight < 2)
which(new_mtcars$weight > 1.5 & new_mtcars$weight < 2)
subset(new_mtcars, weight > 1.5 & weight < 2)
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
new_mtcars[sample(1:nrow(new_mtcars), (.3 * nrow(new_mtcars)),replace = FALSE),]
experience <- c(10, 2, 1, 20, 22, NA, 999, 15, 8)
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "999", NA, "12/1/1999", "1/8/2007")
pid <- c(104, 106, 154, 211, 248, 9396, 109, 497, 356)
age <- c(35, 28, 29, 47, 52, 59, 24, 61, 33)
gender <- c("M", "F", "F", "M","M", "M", "F", "M", "F")
income <- c(35000, 29000, 31000, 49000, 51000, 45000, 38000, 45000, 50000)
education <- c("undergrad", "high", "undergrad", "undergrad", "grad", "high", "Grad", "undergrad" , "grad")
experience <- c(10, 2, 1, 20, 22, NA, 999, 15, 8)
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "999", NA, "12/1/1999", "1/8/2007")
dept <- c("Sales", "IT", "Sales", "IT", "Sales", "Sales", "IT", "IT")
mydata <- data.frame(patientId, age, diabetes, status)
length(pid)
length(age)
length(gender)
length(income)
length(education)
length(experince)
length(experience)
length(hiredate)
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "9/24/1995" "999", NA, "12/1/1999", "1/8/2007")
length(hiredate)
length(dept)
dept <- c("Sales", "IT", "Sales", "Sales", "IT", "Sales", "Sales", "IT", "IT")
mydata <- data.frame(patientId, age, diabetes, status)
mydata <- data.frame(pid, age, gender, income, education, experience, hiredate, dept)
mydata <- data.frame(pid, age, gender, income, education, experience, hiredate, dept)
pid <- c(104, 106, 154, 211, 248, 9396, 109, 497, 356)
length(pid)
age <- c(35, 28, 29, 47, 52, 59, 24, 61, 33)
length(age)
gender <- c("M", "F", "F", "M","M", "M", "F", "M", "F")
length(gender)
income <- c(35000, 29000, 31000, 49000, 51000, 45000, 38000, 45000, 50000)
length(income)
education <- c("undergrad", "high", "undergrad", "undergrad", "grad", "high", "Grad", "undergrad" , "grad")
length(education)
experience <- c(10, 2, 1, 20, 22, NA, 999, 15, 8)
length(experience)
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "9/24/1995" "999", NA, "12/1/1999", "1/8/2007")
length(hiredate)
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "9/24/1995" "999", NA, "12/1/1999", "1/8/2007")
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "9/24/1995", "999", NA, "12/1/1999", "1/8/2007")
length(hiredate)
dept <- c("Sales", "IT", "Sales", "Sales", "IT", "Sales", "Sales", "IT", "IT")
length(dept)
mydata <- data.frame(pid, age, gender, income, education, experience, hiredate, dept)
mydate$hiredate <- as.Date(mydate$hiredate)
mydata$hiredate <- as.Date(mydata$hiredate)
mydata
mydata$hiredate <- as.Date(mydata$hiredate, format="%m/%d/Y")
mydata
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "9/24/1995", "999", NA, "12/1/1999", "1/8/2007")
mydata <- data.frame(pid, age, gender, income, education, experience, hiredate, dept)
mydata$hiredate <- as.Date(mydata$hiredate, format="%m/%d/Y")
mydata
hiredate <- c("1/8/2008", "6/9/2011", "10/1/2012", "4/6/2001", "9/24/1995", "999", NA, "12/1/1999", "1/8/2007")
mydata <- data.frame(pid, age, gender, income, education, experience, hiredate, dept)
mydata$hiredate <- as.Date(mydata$hiredate, format="%m/%d/%Y")
mydata
rownames(mydata)
rownames(mydata) <- pid
mydata
mydata$gender = factor(mydata$gender)
mydata$education = factor(mydata$education)
mydata$dept= factor(mydata$dept)
var.names <- names(mydata)
var.names
mydata$age.income <- (mydata$age / mydata$income)
mydata
mydata$edu.cat
mydata
mydata$edu.cat <- c(NA)
mydata
mydata$edu.cat <- mydata$education
recode(mydata$education, "c('undergrad', 'grad', Grad') = 'college''; else = 'no college")
recode(mydata$education, "c('undergrad', 'grad', Grad') = 'college''; else = 'no college'")
recode(mydata$education, "c('undergrad', 'grad', 'Grad') = 'college''; else = 'no college'")
recode(mydata$education, "c('undergrad', 'grad', 'Grad') = 'college'; else='no college'")
mydata
recode(mydata$edu.cat, "c('undergrad', 'grad', 'Grad') = 'college'; else='no college'")
mydata$edu.cat <- recode(mydata$edu.cat, "c('undergrad', 'grad', 'Grad') = 'college'; else='no college'")
mydata
mydata$exp.cat <- recode(mydata$exp.cat, "1:5 = '5 years or less'; else='more than 15 years'")
mydata$exp.cat
mydata$exp.cat <- recode(mydata$experience, "1:5 = '5 years or less'; else='more than 15 years'")
mydata$exp.cat
mydata$exp.cat <- recode(mydata$experience, "1:5 = '5 years or less'; 5:15 = '5-15 years'; else='more than 15 years'")
mydata$exp.cat
sys.date()
date()
testdate <-as.Date('2010-01-01')
testdate
testdate - date()
library(lubridate)
lubridate
l_date <- parse_date_time(testdate)
l_date <- parse_date_time(testdate, "%Y-%d-%d")
l_date <- parse_date_time('2010-01-01', "%Y-%d-%d")
l_date <- parse_date_time('2010-01-01', "%Y-%d-%m")
datediff(testdate date()
l_date <- parse_date_time('2010-01-01', "%Y-%d-%m")
l_date
l_date <- parse_date_time(testdate, "%Y-%d-%m")
l_date
span <- interval(l_date, ymd('2011-01-01'))
span
dweeks(span)
span <- interval( ymd('2011-01-01'), l_date)
dweeks(span)
is.duration(span)
is.interval(span)
is.difftime(span)
data(iris)
names(iris)
with(iris, plot(Sepal.length, Sepal.width))
with(iris, plot(Sepal.length, Sepal.width))
data(iris)
names(iris)
with(iris, plot(Sepal.length, Sepal.width))
with(iris, plot(Sepal.Length, Sepal.Width))
titiel("Sepal Length vs Width")
titie("Sepal Length vs Width")
title("Sepal Length vs Width")
pdf("iris.graph.pdf")
with(iris, plot(Sepal.Length, Sepal.Width))
dev.off()
dose <- c(20, 40, 40, 45, 65)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type="b")
with(iris, plot(Sepal.Length, Sepal.Width))
with(iris, plot(Sepal.Length, Petal.Width))
plot(dose, drugA, type="h")
plot(dose, drugA, type="c")
b
plot(dose, drugA, type="b")
with(iris, plot(Sepal.Length, Petal.Width, main="Iris Plot", xlab = "Sepal Length",
ylab = "Pedal Width"))
ylab = "Pedal Width"))
opar <- par(no.readonly=TRUE)
par(lty=2, pch=17)
plot(dose, drugA, type="b")
par(opar)
plot(dose, drugA, type="b")
colors()
par(opar)
par(pin=c(2,3))
par(lwd=2, cex=1.5)
par(opar)
par(pin=c(2,3))
par(lwd=2, cex=1.5)
par( cex.axis=0.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
par(opar)
par(opar)
x <- c(1:10)
z <- 10/x
z <- 10/x
y <- x
z <- 10/x
par(mar=c(5,4,4,8) + 0.1)
plot(dose, x, y, type="b", pch=21, col="red", yaxt="n", lty=3, ann=FALSE)
x <- c(1:10)
y <- x
z <- 10/x
par(mar=c(5,4,4,8) + 0.1)
plot(dose, x, y, type="b", pch=21, col="red", yaxt="n", lty=3, ann=FALSE)
x <- c(1:10)
y <- x
plot( x, y, type="b", pch=21, col="red", yaxt="n", lty=3, ann=FALSE)
lines(x, y, type="b", pch=22, col="blue", lty=2)
axis(2, at=x, labels=x, col.axis="red", las=2)
lines(x, y, type="b", pch=22, col="blue", lty=2)
axis(2, at=x, labels=x, col.axis="red", las=2)
plot( x, y, type="b", pch=21, col="red", yaxt="n", lty=3, ann=FALSE)
lines(x, z, type="b", pch=22, col="blue", lty=2)
axis(2, at=x, labels=x, col.axis="red", las=2)
axis(4, at=z, labels, round(z, digits=2s))
demo(graphics)
